{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Section/Section.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","styles","section","container","line","Statistics","good","neutral","bad","total","positivePersentage","list","item","FeedbackOptions","options","onLeaveFeedback","buttonElements","map","name","btn","type","onClick","shortid","generate","btnGroup","Notification","message","App","state","statName","setState","prevState","prevValue","countTotalFeedback","Object","values","reduce","acum","value","countPositiveFeedbackPercentage","this","percentage","keys","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f102b8a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3oKT7\",\"title\":\"Statistics_title__3PVIg\",\"item\":\"Statistics_item__1vE2T\",\"fadeIn\":\"Statistics_fadeIn__1kWaq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"container\":\"Section_container__37ABw\",\"title\":\"Section_title__2S6oE\",\"line\":\"Section_line__2F4_N\"};","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Section.module.css';\n\nconst Section = ({title, children}) => {\n    return (\n        <section className={styles.section}>\n     <div className={styles.container}>\n                <h2 className={styles.title}> {title} </h2>\n                <hr className={styles.line}></hr>\n        {children}\n     </div>\n       </section> \n    )\n};\n\nexport default Section;\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired\n}","import PropTypes from 'prop-types';\n\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ title, good, neutral, bad, total, positivePersentage }) => {\n\n    return (\n    <ul className={styles.list}>\n        <h3 className={styles.title}>{title}</h3>\n\n          <li className={styles.item}>Good: {good}</li>\n          <li className={styles.item}>Neutral: {neutral}</li>\n          <li className={styles.item}>Bad: {bad}</li>\n          <li className={styles.item}>Total: {total} </li>\n          <li className={styles.item}>Positive feedback: {positivePersentage}%</li>\n      </ul>\n    )\n};\n\n\nexport default Statistics;\n\n\nStatistics.propTypes = {\n    title: PropTypes.string.isRequired,\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePersentage: PropTypes.number.isRequired\n}\n\n","import shortid from \"shortid\";\n\nimport PropTypes from 'prop-types';\n\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n    const buttonElements = options.map(name => <button key={shortid.generate()} className={styles.btn} type='button' onClick={() => onLeaveFeedback(name)}>{name}</button>)\n    return (\n        <div className={styles.btnGroup}>\n            {buttonElements}\n        </div>\n    )\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string.isRequired)\n}","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport styles from './Notification.module.css';\n\nconst Notification = ({message}) => {\n    return (\n        <p className={styles.message}>{message}</p>\n    )\n};\n\nexport default Notification;\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired\n}","import React, { Component } from \"react\";\n\n\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Notification from './components/Notification';\n\n\nclass App extends Component {\n\n  \n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  \n  onLeaveFeedback = (statName) => {\n\n    this.setState((prevState) => { \n      const prevValue = prevState[statName];\n      return {\n        [statName]: prevValue + 1\n       }\n      \n    })\n  }\n\n  countTotalFeedback = () => { \n    const values = Object.values(this.state);\n\n    const total = values.reduce((acum, value) => acum + value);\n   \n    return total;\n  }\n  \n  countPositiveFeedbackPercentage = () => {\n   const total = this.countTotalFeedback()\n    const {good} = this.state\n    if (!total) {\n      return 0\n    }\n    const percentage = good * 100 / total;\n    \n    return percentage;\n  }\n  \n  render() {\n    const total = this.countTotalFeedback();\n    const percentage = this.countPositiveFeedbackPercentage();\n  \n        return (\n            <div className='App'>\n                \n            <Section title='Please leave feedback'>\n              <FeedbackOptions options={Object.keys(this.state)} onLeaveFeedback={this.onLeaveFeedback}/>\n              {total ? (<Statistics title='Statistics'\n                {...this.state}\n                total={total}\n                positivePersentage={percentage}\n              />)\n                : (<Notification message=\"No feedback given\" />)}\n\n            </Section> \n          </div>\n        );\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGroup\":\"FeedbackOptions_btnGroup__1gDus\",\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}